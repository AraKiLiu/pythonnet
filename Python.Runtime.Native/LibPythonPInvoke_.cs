using Python.Runtime.Interfaces;

namespace Python.Runtime.Native {

    public partial class LibPythonPInvoke {
        void ILibPython.Py_IncRef(System.IntPtr ob) => LibPythonPInvoke.Py_IncRef(ob);
        void ILibPython.Py_DecRef(System.IntPtr ob) => LibPythonPInvoke.Py_DecRef(ob);
        void ILibPython.Py_InitializeEx(System.Int32 initsigs) => LibPythonPInvoke.Py_InitializeEx(initsigs);
        System.Int32 ILibPython.Py_IsInitialized() => LibPythonPInvoke.Py_IsInitialized();
        void ILibPython.Py_Finalize() => LibPythonPInvoke.Py_Finalize();
        System.IntPtr ILibPython.PyGILState_Ensure() => LibPythonPInvoke.PyGILState_Ensure();
        void ILibPython.PyGILState_Release(System.IntPtr gs) => LibPythonPInvoke.PyGILState_Release(gs);
        void ILibPython.PyEval_InitThreads() => LibPythonPInvoke.PyEval_InitThreads();
        System.Int32 ILibPython.PyEval_ThreadsInitialized() => LibPythonPInvoke.PyEval_ThreadsInitialized();
        void ILibPython.PyEval_AcquireLock() => LibPythonPInvoke.PyEval_AcquireLock();
        void ILibPython.PyEval_ReleaseLock() => LibPythonPInvoke.PyEval_ReleaseLock();
        System.IntPtr ILibPython.PyEval_SaveThread() => LibPythonPInvoke.PyEval_SaveThread();
        void ILibPython.PyEval_RestoreThread(System.IntPtr tstate) => LibPythonPInvoke.PyEval_RestoreThread(tstate);
        System.IntPtr ILibPython.PyEval_GetBuiltins() => LibPythonPInvoke.PyEval_GetBuiltins();
        System.IntPtr ILibPython.PyEval_GetGlobals() => LibPythonPInvoke.PyEval_GetGlobals();
        System.IntPtr ILibPython.PyEval_GetLocals() => LibPythonPInvoke.PyEval_GetLocals();
        System.IntPtr ILibPython.Py_GetProgramName() => LibPythonPInvoke.Py_GetProgramName();
        void ILibPython.Py_SetProgramName(System.IntPtr name) => LibPythonPInvoke.Py_SetProgramName(name);
        System.IntPtr ILibPython.Py_GetPythonHome() => LibPythonPInvoke.Py_GetPythonHome();
        void ILibPython.Py_SetPythonHome(System.IntPtr home) => LibPythonPInvoke.Py_SetPythonHome(home);
        System.IntPtr ILibPython.Py_GetPath() => LibPythonPInvoke.Py_GetPath();
        void ILibPython.Py_SetPath(System.IntPtr home) => LibPythonPInvoke.Py_SetPath(home);
        System.IntPtr ILibPython.Py_GetVersion() => LibPythonPInvoke.Py_GetVersion();
        System.IntPtr ILibPython.Py_GetPlatform() => LibPythonPInvoke.Py_GetPlatform();
        System.IntPtr ILibPython.Py_GetCopyright() => LibPythonPInvoke.Py_GetCopyright();
        System.IntPtr ILibPython.Py_GetCompiler() => LibPythonPInvoke.Py_GetCompiler();
        System.IntPtr ILibPython.Py_GetBuildInfo() => LibPythonPInvoke.Py_GetBuildInfo();
        System.Int32 ILibPython.PyRun_SimpleString(System.String code) => LibPythonPInvoke.PyRun_SimpleString(code);
        System.IntPtr ILibPython.PyRun_String(System.String code, System.IntPtr st, System.IntPtr globals, System.IntPtr locals) => LibPythonPInvoke.PyRun_String(code, st, globals, locals);
        System.IntPtr ILibPython.PyEval_EvalCode(System.IntPtr co, System.IntPtr globals, System.IntPtr locals) => LibPythonPInvoke.PyEval_EvalCode(co, globals, locals);
        System.IntPtr ILibPython.Py_CompileString(System.String code, System.String file, System.IntPtr tok) => LibPythonPInvoke.Py_CompileString(code, file, tok);
        System.IntPtr ILibPython.PyImport_ExecCodeModule(System.String name, System.IntPtr code) => LibPythonPInvoke.PyImport_ExecCodeModule(name, code);
        System.IntPtr ILibPython.PyCFunction_NewEx(System.IntPtr ml, System.IntPtr self, System.IntPtr mod) => LibPythonPInvoke.PyCFunction_NewEx(ml, self, mod);
        System.IntPtr ILibPython.PyCFunction_Call(System.IntPtr func, System.IntPtr args, System.IntPtr kw) => LibPythonPInvoke.PyCFunction_Call(func, args, kw);
        System.IntPtr ILibPython.PyInstance_New(System.IntPtr cls, System.IntPtr args, System.IntPtr kw) => LibPythonPInvoke.PyInstance_New(cls, args, kw);
        System.IntPtr ILibPython.PyInstance_NewRaw(System.IntPtr cls, System.IntPtr dict) => LibPythonPInvoke.PyInstance_NewRaw(cls, dict);
        System.IntPtr ILibPython.PyMethod_New(System.IntPtr func, System.IntPtr self, System.IntPtr cls) => LibPythonPInvoke.PyMethod_New(func, self, cls);
        System.Int32 ILibPython.PyObject_HasAttrString(System.IntPtr pointer, System.String name) => LibPythonPInvoke.PyObject_HasAttrString(pointer, name);
        System.IntPtr ILibPython.PyObject_GetAttrString(System.IntPtr pointer, System.String name) => LibPythonPInvoke.PyObject_GetAttrString(pointer, name);
        System.Int32 ILibPython.PyObject_SetAttrString(System.IntPtr pointer, System.String name, System.IntPtr value) => LibPythonPInvoke.PyObject_SetAttrString(pointer, name, value);
        System.Int32 ILibPython.PyObject_HasAttr(System.IntPtr pointer, System.IntPtr name) => LibPythonPInvoke.PyObject_HasAttr(pointer, name);
        System.IntPtr ILibPython.PyObject_GetAttr(System.IntPtr pointer, System.IntPtr name) => LibPythonPInvoke.PyObject_GetAttr(pointer, name);
        System.Int32 ILibPython.PyObject_SetAttr(System.IntPtr pointer, System.IntPtr name, System.IntPtr value) => LibPythonPInvoke.PyObject_SetAttr(pointer, name, value);
        System.IntPtr ILibPython.PyObject_GetItem(System.IntPtr pointer, System.IntPtr key) => LibPythonPInvoke.PyObject_GetItem(pointer, key);
        System.Int32 ILibPython.PyObject_SetItem(System.IntPtr pointer, System.IntPtr key, System.IntPtr value) => LibPythonPInvoke.PyObject_SetItem(pointer, key, value);
        System.Int32 ILibPython.PyObject_DelItem(System.IntPtr pointer, System.IntPtr key) => LibPythonPInvoke.PyObject_DelItem(pointer, key);
        System.IntPtr ILibPython.PyObject_GetIter(System.IntPtr op) => LibPythonPInvoke.PyObject_GetIter(op);
        System.IntPtr ILibPython.PyObject_Call(System.IntPtr pointer, System.IntPtr args, System.IntPtr kw) => LibPythonPInvoke.PyObject_Call(pointer, args, kw);
        System.IntPtr ILibPython.PyObject_CallObject(System.IntPtr pointer, System.IntPtr args) => LibPythonPInvoke.PyObject_CallObject(pointer, args);
        System.Int32 ILibPython.PyObject_RichCompareBool(System.IntPtr value1, System.IntPtr value2, System.Int32 opid) => LibPythonPInvoke.PyObject_RichCompareBool(value1, value2, opid);
        System.Int32 ILibPython.PyObject_IsInstance(System.IntPtr ob, System.IntPtr type) => LibPythonPInvoke.PyObject_IsInstance(ob, type);
        System.Int32 ILibPython.PyObject_IsSubclass(System.IntPtr ob, System.IntPtr type) => LibPythonPInvoke.PyObject_IsSubclass(ob, type);
        System.Int32 ILibPython.PyCallable_Check(System.IntPtr pointer) => LibPythonPInvoke.PyCallable_Check(pointer);
        System.Int32 ILibPython.PyObject_IsTrue(System.IntPtr pointer) => LibPythonPInvoke.PyObject_IsTrue(pointer);
        System.Int32 ILibPython.PyObject_Not(System.IntPtr pointer) => LibPythonPInvoke.PyObject_Not(pointer);
        System.IntPtr ILibPython._PyObject_Size(System.IntPtr pointer) => LibPythonPInvoke._PyObject_Size(pointer);
        System.IntPtr ILibPython.PyObject_Hash(System.IntPtr op) => LibPythonPInvoke.PyObject_Hash(op);
        System.IntPtr ILibPython.PyObject_Repr(System.IntPtr pointer) => LibPythonPInvoke.PyObject_Repr(pointer);
        System.IntPtr ILibPython.PyObject_Str(System.IntPtr pointer) => LibPythonPInvoke.PyObject_Str(pointer);
        System.IntPtr ILibPython.PyObject_Unicode(System.IntPtr pointer) => LibPythonPInvoke.PyObject_Unicode(pointer);
        System.IntPtr ILibPython.PyObject_Dir(System.IntPtr pointer) => LibPythonPInvoke.PyObject_Dir(pointer);
        System.IntPtr ILibPython.PyNumber_Int(System.IntPtr ob) => LibPythonPInvoke.PyNumber_Int(ob);
        System.IntPtr ILibPython.PyNumber_Long(System.IntPtr ob) => LibPythonPInvoke.PyNumber_Long(ob);
        System.IntPtr ILibPython.PyNumber_Float(System.IntPtr ob) => LibPythonPInvoke.PyNumber_Float(ob);
        System.Boolean ILibPython.PyNumber_Check(System.IntPtr ob) => LibPythonPInvoke.PyNumber_Check(ob);
        System.IntPtr ILibPython.PyInt_FromLong(System.IntPtr value) => LibPythonPInvoke.PyInt_FromLong(value);
        System.Int32 ILibPython.PyInt_AsLong(System.IntPtr value) => LibPythonPInvoke.PyInt_AsLong(value);
        System.IntPtr ILibPython.PyInt_FromString(System.String value, System.IntPtr end, System.Int32 radix) => LibPythonPInvoke.PyInt_FromString(value, end, radix);
        System.IntPtr ILibPython.PyLong_FromLong(System.Int64 value) => LibPythonPInvoke.PyLong_FromLong(value);
        System.IntPtr ILibPython.PyLong_FromUnsignedLong32(System.UInt32 value) => LibPythonPInvoke.PyLong_FromUnsignedLong32(value);
        System.IntPtr ILibPython.PyLong_FromUnsignedLong64(System.UInt64 value) => LibPythonPInvoke.PyLong_FromUnsignedLong64(value);
        System.IntPtr ILibPython.PyLong_FromDouble(System.Double value) => LibPythonPInvoke.PyLong_FromDouble(value);
        System.IntPtr ILibPython.PyLong_FromLongLong(System.Int64 value) => LibPythonPInvoke.PyLong_FromLongLong(value);
        System.IntPtr ILibPython.PyLong_FromUnsignedLongLong(System.UInt64 value) => LibPythonPInvoke.PyLong_FromUnsignedLongLong(value);
        System.IntPtr ILibPython.PyLong_FromString(System.String value, System.IntPtr end, System.Int32 radix) => LibPythonPInvoke.PyLong_FromString(value, end, radix);
        System.Int32 ILibPython.PyLong_AsLong(System.IntPtr value) => LibPythonPInvoke.PyLong_AsLong(value);
        System.UInt32 ILibPython.PyLong_AsUnsignedLong32(System.IntPtr value) => LibPythonPInvoke.PyLong_AsUnsignedLong32(value);
        System.UInt64 ILibPython.PyLong_AsUnsignedLong64(System.IntPtr value) => LibPythonPInvoke.PyLong_AsUnsignedLong64(value);
        System.Int64 ILibPython.PyLong_AsLongLong(System.IntPtr value) => LibPythonPInvoke.PyLong_AsLongLong(value);
        System.UInt64 ILibPython.PyLong_AsUnsignedLongLong(System.IntPtr value) => LibPythonPInvoke.PyLong_AsUnsignedLongLong(value);
        System.IntPtr ILibPython.PyFloat_FromDouble(System.Double value) => LibPythonPInvoke.PyFloat_FromDouble(value);
        System.IntPtr ILibPython.PyFloat_FromString(System.IntPtr value, System.IntPtr junk) => LibPythonPInvoke.PyFloat_FromString(value, junk);
        System.Double ILibPython.PyFloat_AsDouble(System.IntPtr ob) => LibPythonPInvoke.PyFloat_AsDouble(ob);
        System.IntPtr ILibPython.PyNumber_Add(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_Add(o1, o2);
        System.IntPtr ILibPython.PyNumber_Subtract(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_Subtract(o1, o2);
        System.IntPtr ILibPython.PyNumber_Multiply(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_Multiply(o1, o2);
        System.IntPtr ILibPython.PyNumber_TrueDivide(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_TrueDivide(o1, o2);
        System.IntPtr ILibPython.PyNumber_And(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_And(o1, o2);
        System.IntPtr ILibPython.PyNumber_Xor(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_Xor(o1, o2);
        System.IntPtr ILibPython.PyNumber_Or(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_Or(o1, o2);
        System.IntPtr ILibPython.PyNumber_Lshift(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_Lshift(o1, o2);
        System.IntPtr ILibPython.PyNumber_Rshift(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_Rshift(o1, o2);
        System.IntPtr ILibPython.PyNumber_Power(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_Power(o1, o2);
        System.IntPtr ILibPython.PyNumber_Remainder(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_Remainder(o1, o2);
        System.IntPtr ILibPython.PyNumber_InPlaceAdd(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_InPlaceAdd(o1, o2);
        System.IntPtr ILibPython.PyNumber_InPlaceSubtract(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_InPlaceSubtract(o1, o2);
        System.IntPtr ILibPython.PyNumber_InPlaceMultiply(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_InPlaceMultiply(o1, o2);
        System.IntPtr ILibPython.PyNumber_InPlaceTrueDivide(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_InPlaceTrueDivide(o1, o2);
        System.IntPtr ILibPython.PyNumber_InPlaceAnd(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_InPlaceAnd(o1, o2);
        System.IntPtr ILibPython.PyNumber_InPlaceXor(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_InPlaceXor(o1, o2);
        System.IntPtr ILibPython.PyNumber_InPlaceOr(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_InPlaceOr(o1, o2);
        System.IntPtr ILibPython.PyNumber_InPlaceLshift(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_InPlaceLshift(o1, o2);
        System.IntPtr ILibPython.PyNumber_InPlaceRshift(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_InPlaceRshift(o1, o2);
        System.IntPtr ILibPython.PyNumber_InPlacePower(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_InPlacePower(o1, o2);
        System.IntPtr ILibPython.PyNumber_InPlaceRemainder(System.IntPtr o1, System.IntPtr o2) => LibPythonPInvoke.PyNumber_InPlaceRemainder(o1, o2);
        System.IntPtr ILibPython.PyNumber_Negative(System.IntPtr o1) => LibPythonPInvoke.PyNumber_Negative(o1);
        System.IntPtr ILibPython.PyNumber_Positive(System.IntPtr o1) => LibPythonPInvoke.PyNumber_Positive(o1);
        System.IntPtr ILibPython.PyNumber_Invert(System.IntPtr o1) => LibPythonPInvoke.PyNumber_Invert(o1);
        System.Boolean ILibPython.PySequence_Check(System.IntPtr pointer) => LibPythonPInvoke.PySequence_Check(pointer);
        System.IntPtr ILibPython.PySequence_GetItem(System.IntPtr pointer, System.IntPtr index) => LibPythonPInvoke.PySequence_GetItem(pointer, index);
        System.Int32 ILibPython.PySequence_SetItem(System.IntPtr pointer, System.IntPtr index, System.IntPtr value) => LibPythonPInvoke.PySequence_SetItem(pointer, index, value);
        System.Int32 ILibPython.PySequence_DelItem(System.IntPtr pointer, System.IntPtr index) => LibPythonPInvoke.PySequence_DelItem(pointer, index);
        System.IntPtr ILibPython.PySequence_GetSlice(System.IntPtr pointer, System.IntPtr i1, System.IntPtr i2) => LibPythonPInvoke.PySequence_GetSlice(pointer, i1, i2);
        System.Int32 ILibPython.PySequence_SetSlice(System.IntPtr pointer, System.IntPtr i1, System.IntPtr i2, System.IntPtr v) => LibPythonPInvoke.PySequence_SetSlice(pointer, i1, i2, v);
        System.Int32 ILibPython.PySequence_DelSlice(System.IntPtr pointer, System.IntPtr i1, System.IntPtr i2) => LibPythonPInvoke.PySequence_DelSlice(pointer, i1, i2);
        System.IntPtr ILibPython._PySequence_Size(System.IntPtr pointer) => LibPythonPInvoke._PySequence_Size(pointer);
        System.Int32 ILibPython.PySequence_Contains(System.IntPtr pointer, System.IntPtr item) => LibPythonPInvoke.PySequence_Contains(pointer, item);
        System.IntPtr ILibPython.PySequence_Concat(System.IntPtr pointer, System.IntPtr other) => LibPythonPInvoke.PySequence_Concat(pointer, other);
        System.IntPtr ILibPython.PySequence_Repeat(System.IntPtr pointer, System.IntPtr count) => LibPythonPInvoke.PySequence_Repeat(pointer, count);
        System.Int32 ILibPython.PySequence_Index(System.IntPtr pointer, System.IntPtr item) => LibPythonPInvoke.PySequence_Index(pointer, item);
        System.IntPtr ILibPython._PySequence_Count(System.IntPtr pointer, System.IntPtr value) => LibPythonPInvoke._PySequence_Count(pointer, value);
        System.IntPtr ILibPython.PySequence_Tuple(System.IntPtr pointer) => LibPythonPInvoke.PySequence_Tuple(pointer);
        System.IntPtr ILibPython.PySequence_List(System.IntPtr pointer) => LibPythonPInvoke.PySequence_List(pointer);
        System.IntPtr ILibPython.PyBytes_FromString(System.String op) => LibPythonPInvoke.PyBytes_FromString(op);
        System.IntPtr ILibPython._PyBytes_Size(System.IntPtr op) => LibPythonPInvoke._PyBytes_Size(op);
        System.IntPtr ILibPython._PyString_FromStringAndSize(System.String value, System.IntPtr size) => LibPythonPInvoke._PyString_FromStringAndSize(value, size);
        System.IntPtr ILibPython.PyUnicode_FromStringAndSize(System.IntPtr value, System.IntPtr size) => LibPythonPInvoke.PyUnicode_FromStringAndSize(value, size);
        System.IntPtr ILibPython.PyUnicode_FromOrdinal(System.Int32 c) => LibPythonPInvoke.PyUnicode_FromOrdinal(c);
        System.IntPtr ILibPython.PyUnicode_AsUnicode(System.IntPtr ob) => LibPythonPInvoke.PyUnicode_AsUnicode(ob);
        System.IntPtr ILibPython.PyUnicode_FromObject(System.IntPtr ob) => LibPythonPInvoke.PyUnicode_FromObject(ob);
        System.IntPtr ILibPython.PyUnicode_FromEncodedObject(System.IntPtr ob, System.IntPtr enc, System.IntPtr err) => LibPythonPInvoke.PyUnicode_FromEncodedObject(ob, enc, err);
        System.IntPtr ILibPython._PyUnicode_GetSize(System.IntPtr ob) => LibPythonPInvoke._PyUnicode_GetSize(ob);
        System.IntPtr ILibPython.PyUnicode_FromKindAndData(System.Int32 kind, System.String s, System.IntPtr size) => LibPythonPInvoke.PyUnicode_FromKindAndData(kind, s, size);
        System.IntPtr ILibPython.PyDict_New() => LibPythonPInvoke.PyDict_New();
        System.IntPtr ILibPython.PyDictProxy_New(System.IntPtr dict) => LibPythonPInvoke.PyDictProxy_New(dict);
        System.IntPtr ILibPython.PyDict_GetItem(System.IntPtr pointer, System.IntPtr key) => LibPythonPInvoke.PyDict_GetItem(pointer, key);
        System.IntPtr ILibPython.PyDict_GetItemString(System.IntPtr pointer, System.String key) => LibPythonPInvoke.PyDict_GetItemString(pointer, key);
        System.Int32 ILibPython.PyDict_SetItem(System.IntPtr pointer, System.IntPtr key, System.IntPtr value) => LibPythonPInvoke.PyDict_SetItem(pointer, key, value);
        System.Int32 ILibPython.PyDict_SetItemString(System.IntPtr pointer, System.String key, System.IntPtr value) => LibPythonPInvoke.PyDict_SetItemString(pointer, key, value);
        System.Int32 ILibPython.PyDict_DelItem(System.IntPtr pointer, System.IntPtr key) => LibPythonPInvoke.PyDict_DelItem(pointer, key);
        System.Int32 ILibPython.PyDict_DelItemString(System.IntPtr pointer, System.String key) => LibPythonPInvoke.PyDict_DelItemString(pointer, key);
        System.Int32 ILibPython.PyMapping_HasKey(System.IntPtr pointer, System.IntPtr key) => LibPythonPInvoke.PyMapping_HasKey(pointer, key);
        System.IntPtr ILibPython.PyDict_Keys(System.IntPtr pointer) => LibPythonPInvoke.PyDict_Keys(pointer);
        System.IntPtr ILibPython.PyDict_Values(System.IntPtr pointer) => LibPythonPInvoke.PyDict_Values(pointer);
        System.IntPtr ILibPython.PyDict_Items(System.IntPtr pointer) => LibPythonPInvoke.PyDict_Items(pointer);
        System.IntPtr ILibPython.PyDict_Copy(System.IntPtr pointer) => LibPythonPInvoke.PyDict_Copy(pointer);
        System.Int32 ILibPython.PyDict_Update(System.IntPtr pointer, System.IntPtr other) => LibPythonPInvoke.PyDict_Update(pointer, other);
        void ILibPython.PyDict_Clear(System.IntPtr pointer) => LibPythonPInvoke.PyDict_Clear(pointer);
        System.IntPtr ILibPython._PyDict_Size(System.IntPtr pointer) => LibPythonPInvoke._PyDict_Size(pointer);
        System.IntPtr ILibPython.PyList_New(System.IntPtr size) => LibPythonPInvoke.PyList_New(size);
        System.IntPtr ILibPython.PyList_AsTuple(System.IntPtr pointer) => LibPythonPInvoke.PyList_AsTuple(pointer);
        System.IntPtr ILibPython.PyList_GetItem(System.IntPtr pointer, System.IntPtr index) => LibPythonPInvoke.PyList_GetItem(pointer, index);
        System.Int32 ILibPython.PyList_SetItem(System.IntPtr pointer, System.IntPtr index, System.IntPtr value) => LibPythonPInvoke.PyList_SetItem(pointer, index, value);
        System.Int32 ILibPython.PyList_Insert(System.IntPtr pointer, System.IntPtr index, System.IntPtr value) => LibPythonPInvoke.PyList_Insert(pointer, index, value);
        System.Int32 ILibPython.PyList_Append(System.IntPtr pointer, System.IntPtr value) => LibPythonPInvoke.PyList_Append(pointer, value);
        System.Int32 ILibPython.PyList_Reverse(System.IntPtr pointer) => LibPythonPInvoke.PyList_Reverse(pointer);
        System.Int32 ILibPython.PyList_Sort(System.IntPtr pointer) => LibPythonPInvoke.PyList_Sort(pointer);
        System.IntPtr ILibPython.PyList_GetSlice(System.IntPtr pointer, System.IntPtr start, System.IntPtr end) => LibPythonPInvoke.PyList_GetSlice(pointer, start, end);
        System.Int32 ILibPython.PyList_SetSlice(System.IntPtr pointer, System.IntPtr start, System.IntPtr end, System.IntPtr value) => LibPythonPInvoke.PyList_SetSlice(pointer, start, end, value);
        System.IntPtr ILibPython._PyList_Size(System.IntPtr pointer) => LibPythonPInvoke._PyList_Size(pointer);
        System.IntPtr ILibPython.PyTuple_New(System.IntPtr size) => LibPythonPInvoke.PyTuple_New(size);
        System.IntPtr ILibPython.PyTuple_GetItem(System.IntPtr pointer, System.IntPtr index) => LibPythonPInvoke.PyTuple_GetItem(pointer, index);
        System.Int32 ILibPython.PyTuple_SetItem(System.IntPtr pointer, System.IntPtr index, System.IntPtr value) => LibPythonPInvoke.PyTuple_SetItem(pointer, index, value);
        System.IntPtr ILibPython.PyTuple_GetSlice(System.IntPtr pointer, System.IntPtr start, System.IntPtr end) => LibPythonPInvoke.PyTuple_GetSlice(pointer, start, end);
        System.IntPtr ILibPython._PyTuple_Size(System.IntPtr pointer) => LibPythonPInvoke._PyTuple_Size(pointer);
        System.IntPtr ILibPython.PyIter_Next(System.IntPtr pointer) => LibPythonPInvoke.PyIter_Next(pointer);
        System.IntPtr ILibPython.PyModule_New(System.String name) => LibPythonPInvoke.PyModule_New(name);
        System.String ILibPython.PyModule_GetName(System.IntPtr module) => LibPythonPInvoke.PyModule_GetName(module);
        System.IntPtr ILibPython.PyModule_GetDict(System.IntPtr module) => LibPythonPInvoke.PyModule_GetDict(module);
        System.String ILibPython.PyModule_GetFilename(System.IntPtr module) => LibPythonPInvoke.PyModule_GetFilename(module);
        System.IntPtr ILibPython.PyModule_Create2(System.IntPtr module, System.Int32 apiver) => LibPythonPInvoke.PyModule_Create2(module, apiver);
        System.IntPtr ILibPython.PyImport_Import(System.IntPtr name) => LibPythonPInvoke.PyImport_Import(name);
        System.IntPtr ILibPython.PyImport_ImportModule(System.String name) => LibPythonPInvoke.PyImport_ImportModule(name);
        System.IntPtr ILibPython.PyImport_ReloadModule(System.IntPtr module) => LibPythonPInvoke.PyImport_ReloadModule(module);
        System.IntPtr ILibPython.PyImport_AddModule(System.String name) => LibPythonPInvoke.PyImport_AddModule(name);
        System.IntPtr ILibPython.PyImport_GetModuleDict() => LibPythonPInvoke.PyImport_GetModuleDict();
        void ILibPython.PySys_SetArgvEx(System.Int32 argc, System.String[] argv, System.Int32 updatepath) => LibPythonPInvoke.PySys_SetArgvEx(argc, argv, updatepath);
        System.IntPtr ILibPython.PySys_GetObject(System.String name) => LibPythonPInvoke.PySys_GetObject(name);
        System.Int32 ILibPython.PySys_SetObject(System.String name, System.IntPtr ob) => LibPythonPInvoke.PySys_SetObject(name, ob);
        void ILibPython.PyType_Modified(System.IntPtr type) => LibPythonPInvoke.PyType_Modified(type);
        System.Boolean ILibPython.PyType_IsSubtype(System.IntPtr t1, System.IntPtr t2) => LibPythonPInvoke.PyType_IsSubtype(t1, t2);
        System.IntPtr ILibPython.PyType_GenericNew(System.IntPtr type, System.IntPtr args, System.IntPtr kw) => LibPythonPInvoke.PyType_GenericNew(type, args, kw);
        System.IntPtr ILibPython.PyType_GenericAlloc(System.IntPtr type, System.IntPtr n) => LibPythonPInvoke.PyType_GenericAlloc(type, n);
        System.Int32 ILibPython.PyType_Ready(System.IntPtr type) => LibPythonPInvoke.PyType_Ready(type);
        System.IntPtr ILibPython._PyType_Lookup(System.IntPtr type, System.IntPtr name) => LibPythonPInvoke._PyType_Lookup(type, name);
        System.IntPtr ILibPython.PyObject_GenericGetAttr(System.IntPtr obj, System.IntPtr name) => LibPythonPInvoke.PyObject_GenericGetAttr(obj, name);
        System.Int32 ILibPython.PyObject_GenericSetAttr(System.IntPtr obj, System.IntPtr name, System.IntPtr value) => LibPythonPInvoke.PyObject_GenericSetAttr(obj, name, value);
        System.IntPtr ILibPython._PyObject_GetDictPtr(System.IntPtr obj) => LibPythonPInvoke._PyObject_GetDictPtr(obj);
        System.IntPtr ILibPython.PyObject_GC_New(System.IntPtr tp) => LibPythonPInvoke.PyObject_GC_New(tp);
        void ILibPython.PyObject_GC_Del(System.IntPtr tp) => LibPythonPInvoke.PyObject_GC_Del(tp);
        void ILibPython.PyObject_GC_Track(System.IntPtr tp) => LibPythonPInvoke.PyObject_GC_Track(tp);
        void ILibPython.PyObject_GC_UnTrack(System.IntPtr tp) => LibPythonPInvoke.PyObject_GC_UnTrack(tp);
        System.IntPtr ILibPython.PyMem_Malloc(System.IntPtr size) => LibPythonPInvoke.PyMem_Malloc(size);
        System.IntPtr ILibPython.PyMem_Realloc(System.IntPtr ptr, System.IntPtr size) => LibPythonPInvoke.PyMem_Realloc(ptr, size);
        void ILibPython.PyMem_Free(System.IntPtr ptr) => LibPythonPInvoke.PyMem_Free(ptr);
        void ILibPython.PyErr_SetString(System.IntPtr ob, System.String message) => LibPythonPInvoke.PyErr_SetString(ob, message);
        void ILibPython.PyErr_SetObject(System.IntPtr ob, System.IntPtr message) => LibPythonPInvoke.PyErr_SetObject(ob, message);
        System.IntPtr ILibPython.PyErr_SetFromErrno(System.IntPtr ob) => LibPythonPInvoke.PyErr_SetFromErrno(ob);
        void ILibPython.PyErr_SetNone(System.IntPtr ob) => LibPythonPInvoke.PyErr_SetNone(ob);
        System.Int32 ILibPython.PyErr_ExceptionMatches(System.IntPtr exception) => LibPythonPInvoke.PyErr_ExceptionMatches(exception);
        System.Int32 ILibPython.PyErr_GivenExceptionMatches(System.IntPtr ob, System.IntPtr val) => LibPythonPInvoke.PyErr_GivenExceptionMatches(ob, val);
        void ILibPython.PyErr_NormalizeException(System.IntPtr ob, System.IntPtr val, System.IntPtr tb) => LibPythonPInvoke.PyErr_NormalizeException(ob, val, tb);
        System.IntPtr ILibPython.PyErr_Occurred() => LibPythonPInvoke.PyErr_Occurred();
        void ILibPython.PyErr_Fetch(ref System.IntPtr ob, ref System.IntPtr val, ref System.IntPtr tb) => LibPythonPInvoke.PyErr_Fetch(ref ob, ref val, ref tb);
        void ILibPython.PyErr_Restore(System.IntPtr ob, System.IntPtr val, System.IntPtr tb) => LibPythonPInvoke.PyErr_Restore(ob, val, tb);
        void ILibPython.PyErr_Clear() => LibPythonPInvoke.PyErr_Clear();
        void ILibPython.PyErr_Print() => LibPythonPInvoke.PyErr_Print();
        System.IntPtr ILibPython.PyMethod_Self(System.IntPtr ob) => LibPythonPInvoke.PyMethod_Self(ob);
        System.IntPtr ILibPython.PyMethod_Function(System.IntPtr ob) => LibPythonPInvoke.PyMethod_Function(ob);
        System.Int32 ILibPython.Py_AddPendingCall(System.IntPtr func, System.IntPtr arg) => LibPythonPInvoke.Py_AddPendingCall(func, arg);
        System.Int32 ILibPython.Py_MakePendingCalls() => LibPythonPInvoke.Py_MakePendingCalls();
        System.Int32 ILibPython.GetPyNoSiteFlag() => LibPythonPInvoke.GetPyNoSiteFlag();
        void ILibPython.SetPyNoSiteFlag(System.Int32 val) => LibPythonPInvoke.SetPyNoSiteFlag(val);
    }
}
